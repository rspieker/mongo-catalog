name: Recipe

on:
    push:
    schedule:
        - cron: "0 7 * * 0/3"
    workflow_dispatch:

jobs:
    mongo-versions:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Node.js
              uses: actions/setup-node@v4
              with:
                node-version: 20.x
                cache: "npm"
            
            - name: install
              run: npm install
            
            - name: update Mongo Versions
              id: update-versions
              run: npm run update:mongo-versions

            - name: git config
              run: |
                git config user.name "GutHub Actions Recipe Bot"
                git config user.email "<>"
                git add ./automation && git commit -m "mongo versions $(date +"%Y-%m-%dT%H:%M:%S%z")" && while ! git push origin main; do git pull --rebase; done || exit 0

    catalog-queries:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Node.js
              uses: actions/setup-node@v4
              with:
                node-version: 20.x
                cache: "npm"
                            
            - name: install
              run: npm install

            - name: update Catalog Queries
              run: npm run update:catalog-queries

            - name: git config
              run: |
                git config user.name "GutHub Actions Recipe Bot"
                git config user.email "<>"
                git add ./automation && git commit -m "catalog queries $(date +"%Y-%m-%dT%H:%M:%S%z")" && while ! git push origin main; do git pull --rebase; done || exit 0

    workload:
        runs-on: ubuntu-latest

        needs:
          - mongo-versions
          - catalog-queries

        outputs:
          versions: ${{ steps.capture.outputs.versions }}

        steps:
            - uses: actions/checkout@v4

            - name: Node.js
              uses: actions/setup-node@v4
              with:
                node-version: 20.x
                cache: "npm"
                            
            - name: install
              run: npm install

            - name: Determine Workload
              run: npm run update:workload

            - name: Output versions
              id: capture
              run: echo "versions=$(cat ./automation/workload.txt)"

    debug-versions:
        runs-on: ubuntu-latest

        needs:
          - workload

        steps:
          - env:
              WORKLOAD: ${{needs.workload.outputs.versions}}
            run: echo "[[$WORKLOAD]]"
